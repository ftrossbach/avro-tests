/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package example.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Union extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5396178720742682675L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Union\",\"namespace\":\"example.avro\",\"fields\":[{\"name\":\"some_union_field\",\"type\":[\"string\",\"int\",\"double\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Union> ENCODER =
      new BinaryMessageEncoder<Union>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Union> DECODER =
      new BinaryMessageDecoder<Union>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Union> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Union> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Union> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Union>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Union to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Union from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Union instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Union fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Object some_union_field;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Union() {}

  /**
   * All-args constructor.
   * @param some_union_field The new value for some_union_field
   */
  public Union(java.lang.Object some_union_field) {
    this.some_union_field = some_union_field;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return some_union_field;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: some_union_field = value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'some_union_field' field.
   * @return The value of the 'some_union_field' field.
   */
  public java.lang.Object getSomeUnionField() {
    return some_union_field;
  }


  /**
   * Sets the value of the 'some_union_field' field.
   * @param value the value to set.
   */
  public void setSomeUnionField(java.lang.Object value) {
    this.some_union_field = value;
  }

  /**
   * Creates a new Union RecordBuilder.
   * @return A new Union RecordBuilder
   */
  public static example.avro.Union.Builder newBuilder() {
    return new example.avro.Union.Builder();
  }

  /**
   * Creates a new Union RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Union RecordBuilder
   */
  public static example.avro.Union.Builder newBuilder(example.avro.Union.Builder other) {
    if (other == null) {
      return new example.avro.Union.Builder();
    } else {
      return new example.avro.Union.Builder(other);
    }
  }

  /**
   * Creates a new Union RecordBuilder by copying an existing Union instance.
   * @param other The existing instance to copy.
   * @return A new Union RecordBuilder
   */
  public static example.avro.Union.Builder newBuilder(example.avro.Union other) {
    if (other == null) {
      return new example.avro.Union.Builder();
    } else {
      return new example.avro.Union.Builder(other);
    }
  }

  /**
   * RecordBuilder for Union instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Union>
    implements org.apache.avro.data.RecordBuilder<Union> {

    private java.lang.Object some_union_field;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.avro.Union.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.some_union_field)) {
        this.some_union_field = data().deepCopy(fields()[0].schema(), other.some_union_field);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
    }

    /**
     * Creates a Builder by copying an existing Union instance
     * @param other The existing instance to copy.
     */
    private Builder(example.avro.Union other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.some_union_field)) {
        this.some_union_field = data().deepCopy(fields()[0].schema(), other.some_union_field);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'some_union_field' field.
      * @return The value.
      */
    public java.lang.Object getSomeUnionField() {
      return some_union_field;
    }


    /**
      * Sets the value of the 'some_union_field' field.
      * @param value The value of 'some_union_field'.
      * @return This builder.
      */
    public example.avro.Union.Builder setSomeUnionField(java.lang.Object value) {
      validate(fields()[0], value);
      this.some_union_field = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'some_union_field' field has been set.
      * @return True if the 'some_union_field' field has been set, false otherwise.
      */
    public boolean hasSomeUnionField() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'some_union_field' field.
      * @return This builder.
      */
    public example.avro.Union.Builder clearSomeUnionField() {
      some_union_field = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Union build() {
      try {
        Union record = new Union();
        record.some_union_field = fieldSetFlags()[0] ? this.some_union_field :  defaultValue(fields()[0]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Union>
    WRITER$ = (org.apache.avro.io.DatumWriter<Union>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Union>
    READER$ = (org.apache.avro.io.DatumReader<Union>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










